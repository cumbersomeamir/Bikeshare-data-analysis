{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Project: Patient Appointments\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use this cell to set up import statements for all of the packages that you\n",
    "#   plan to use.\n",
    "\n",
    "# Remember to include a 'magic word' so that your visualizations are plotted\n",
    "#   inline with the notebook. See this page for more:\n",
    "#   http://ipython.readthedocs.io/en/stable/interactive/magics.html\n",
    "import pandas as pd\n",
    "from IPython.display import display\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load your data and print out a few lines. Perform operations to inspect data\n",
    "#   types and look for instances of missing or possibly errant data.\n",
    "df = pd.read_csv('noshowappointments-kagglev2-may-2016.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110527 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      "PatientId         110527 non-null float64\n",
      "AppointmentID     110527 non-null int64\n",
      "Gender            110527 non-null object\n",
      "ScheduledDay      110527 non-null object\n",
      "AppointmentDay    110527 non-null object\n",
      "Age               110527 non-null int64\n",
      "Neighbourhood     110527 non-null object\n",
      "Scholarship       110527 non-null int64\n",
      "Hipertension      110527 non-null int64\n",
      "Diabetes          110527 non-null int64\n",
      "Alcoholism        110527 non-null int64\n",
      "Handcap           110527 non-null int64\n",
      "SMS_received      110527 non-null int64\n",
      "No-show           110527 non-null object\n",
      "dtypes: float64(1), int64(8), object(5)\n",
      "memory usage: 11.8+ MB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.105270e+05</td>\n",
       "      <td>1.105270e+05</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.474963e+14</td>\n",
       "      <td>5.675305e+06</td>\n",
       "      <td>37.088874</td>\n",
       "      <td>0.098266</td>\n",
       "      <td>0.197246</td>\n",
       "      <td>0.071865</td>\n",
       "      <td>0.030400</td>\n",
       "      <td>0.022248</td>\n",
       "      <td>0.321026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.560949e+14</td>\n",
       "      <td>7.129575e+04</td>\n",
       "      <td>23.110205</td>\n",
       "      <td>0.297675</td>\n",
       "      <td>0.397921</td>\n",
       "      <td>0.258265</td>\n",
       "      <td>0.171686</td>\n",
       "      <td>0.161543</td>\n",
       "      <td>0.466873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.921784e+04</td>\n",
       "      <td>5.030230e+06</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.172614e+12</td>\n",
       "      <td>5.640286e+06</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.173184e+13</td>\n",
       "      <td>5.680573e+06</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>9.439172e+13</td>\n",
       "      <td>5.725524e+06</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.999816e+14</td>\n",
       "      <td>5.790484e+06</td>\n",
       "      <td>115.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          PatientId  AppointmentID            Age    Scholarship  \\\n",
       "count  1.105270e+05   1.105270e+05  110527.000000  110527.000000   \n",
       "mean   1.474963e+14   5.675305e+06      37.088874       0.098266   \n",
       "std    2.560949e+14   7.129575e+04      23.110205       0.297675   \n",
       "min    3.921784e+04   5.030230e+06      -1.000000       0.000000   \n",
       "25%    4.172614e+12   5.640286e+06      18.000000       0.000000   \n",
       "50%    3.173184e+13   5.680573e+06      37.000000       0.000000   \n",
       "75%    9.439172e+13   5.725524e+06      55.000000       0.000000   \n",
       "max    9.999816e+14   5.790484e+06     115.000000       1.000000   \n",
       "\n",
       "        Hipertension       Diabetes     Alcoholism        Handcap  \\\n",
       "count  110527.000000  110527.000000  110527.000000  110527.000000   \n",
       "mean        0.197246       0.071865       0.030400       0.022248   \n",
       "std         0.397921       0.258265       0.171686       0.161543   \n",
       "min         0.000000       0.000000       0.000000       0.000000   \n",
       "25%         0.000000       0.000000       0.000000       0.000000   \n",
       "50%         0.000000       0.000000       0.000000       0.000000   \n",
       "75%         0.000000       0.000000       0.000000       0.000000   \n",
       "max         1.000000       1.000000       1.000000       4.000000   \n",
       "\n",
       "        SMS_received  \n",
       "count  110527.000000  \n",
       "mean        0.321026  \n",
       "std         0.466873  \n",
       "min         0.000000  \n",
       "25%         0.000000  \n",
       "50%         0.000000  \n",
       "75%         1.000000  \n",
       "max         1.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.info()\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: You should _not_ perform too many operations in each cell. Create cells freely to explore your data. One option that you can take with this project is to do a lot of explorations in an initial notebook. These don't have to be organized, but make sure you use enough comments to understand the purpose of each code cell. Then, after you're done with your analysis, create a duplicate notebook where you will trim the excess and organize your steps so that you have a flowing, cohesive report.\n",
    "\n",
    "> **Tip**: Make sure that you keep your reader informed on the steps that you are taking in your investigation. Follow every code cell, or every set of related code cells, with a markdown cell to describe to the reader what was found in the preceding cell(s). Try to make it so that the reader can then understand what they will be seeing in the following cell(s).\n",
    "\n",
    "### Data Cleaning (Replace this with more specific notes!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[-1,\n",
       " 0,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 8,\n",
       " 9,\n",
       " 10,\n",
       " 11,\n",
       " 12,\n",
       " 13,\n",
       " 14,\n",
       " 15,\n",
       " 16,\n",
       " 17,\n",
       " 18,\n",
       " 19,\n",
       " 20,\n",
       " 21,\n",
       " 22,\n",
       " 23,\n",
       " 24,\n",
       " 25,\n",
       " 26,\n",
       " 27,\n",
       " 28,\n",
       " 29,\n",
       " 30,\n",
       " 31,\n",
       " 32,\n",
       " 33,\n",
       " 34,\n",
       " 35,\n",
       " 36,\n",
       " 37,\n",
       " 38,\n",
       " 39,\n",
       " 40,\n",
       " 41,\n",
       " 42,\n",
       " 43,\n",
       " 44,\n",
       " 45,\n",
       " 46,\n",
       " 47,\n",
       " 48,\n",
       " 49,\n",
       " 50,\n",
       " 51,\n",
       " 52,\n",
       " 53,\n",
       " 54,\n",
       " 55,\n",
       " 56,\n",
       " 57,\n",
       " 58,\n",
       " 59,\n",
       " 60,\n",
       " 61,\n",
       " 62,\n",
       " 63,\n",
       " 64,\n",
       " 65,\n",
       " 66,\n",
       " 67,\n",
       " 68,\n",
       " 69,\n",
       " 70,\n",
       " 71,\n",
       " 72,\n",
       " 73,\n",
       " 74,\n",
       " 75,\n",
       " 76,\n",
       " 77,\n",
       " 78,\n",
       " 79,\n",
       " 80,\n",
       " 81,\n",
       " 82,\n",
       " 83,\n",
       " 84,\n",
       " 85,\n",
       " 86,\n",
       " 87,\n",
       " 88,\n",
       " 89,\n",
       " 90,\n",
       " 91,\n",
       " 92,\n",
       " 93,\n",
       " 94,\n",
       " 95,\n",
       " 96,\n",
       " 97,\n",
       " 98,\n",
       " 99,\n",
       " 100,\n",
       " 102,\n",
       " 115]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#We can clearly see that the minimum age is -1 which is just absurd ,so we replace all these kind of values\n",
    "df.isnull().sum()\n",
    "#Checking for Negative value\n",
    "sorted(df.Age.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 8,\n",
       " 9,\n",
       " 10,\n",
       " 11,\n",
       " 12,\n",
       " 13,\n",
       " 14,\n",
       " 15,\n",
       " 16,\n",
       " 17,\n",
       " 18,\n",
       " 19,\n",
       " 20,\n",
       " 21,\n",
       " 22,\n",
       " 23,\n",
       " 24,\n",
       " 25,\n",
       " 26,\n",
       " 27,\n",
       " 28,\n",
       " 29,\n",
       " 30,\n",
       " 31,\n",
       " 32,\n",
       " 33,\n",
       " 34,\n",
       " 35,\n",
       " 36,\n",
       " 37,\n",
       " 38,\n",
       " 39,\n",
       " 40,\n",
       " 41,\n",
       " 42,\n",
       " 43,\n",
       " 44,\n",
       " 45,\n",
       " 46,\n",
       " 47,\n",
       " 48,\n",
       " 49,\n",
       " 50,\n",
       " 51,\n",
       " 52,\n",
       " 53,\n",
       " 54,\n",
       " 55,\n",
       " 56,\n",
       " 57,\n",
       " 58,\n",
       " 59,\n",
       " 60,\n",
       " 61,\n",
       " 62,\n",
       " 63,\n",
       " 64,\n",
       " 65,\n",
       " 66,\n",
       " 67,\n",
       " 68,\n",
       " 69,\n",
       " 70,\n",
       " 71,\n",
       " 72,\n",
       " 73,\n",
       " 74,\n",
       " 75,\n",
       " 76,\n",
       " 77,\n",
       " 78,\n",
       " 79,\n",
       " 80,\n",
       " 81,\n",
       " 82,\n",
       " 83,\n",
       " 84,\n",
       " 85,\n",
       " 86,\n",
       " 87,\n",
       " 88,\n",
       " 89,\n",
       " 90,\n",
       " 91,\n",
       " 92,\n",
       " 93,\n",
       " 94,\n",
       " 95,\n",
       " 96,\n",
       " 97,\n",
       " 98,\n",
       " 99,\n",
       " 100,\n",
       " 102,\n",
       " 115]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# cleaning the data , age should always be greater than 0\n",
    "df = df[df.Age >= 0]\n",
    "sorted(df.Age.unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n",
    "\n",
    "### Research Question 1 What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>No-show</th>\n",
       "      <th>No</th>\n",
       "      <th>Yes</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2900</td>\n",
       "      <td>639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1858</td>\n",
       "      <td>415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1366</td>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1236</td>\n",
       "      <td>277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1017</td>\n",
       "      <td>282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1169</td>\n",
       "      <td>320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1205</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1126</td>\n",
       "      <td>301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1106</td>\n",
       "      <td>318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1008</td>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>970</td>\n",
       "      <td>304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>948</td>\n",
       "      <td>247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>820</td>\n",
       "      <td>272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>800</td>\n",
       "      <td>303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>802</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>889</td>\n",
       "      <td>322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1049</td>\n",
       "      <td>353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1113</td>\n",
       "      <td>396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1137</td>\n",
       "      <td>350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1151</td>\n",
       "      <td>394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1082</td>\n",
       "      <td>355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1097</td>\n",
       "      <td>355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1025</td>\n",
       "      <td>351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1006</td>\n",
       "      <td>343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>921</td>\n",
       "      <td>321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>980</td>\n",
       "      <td>352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>971</td>\n",
       "      <td>312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1048</td>\n",
       "      <td>329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1116</td>\n",
       "      <td>332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1073</td>\n",
       "      <td>330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>629</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>513</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>463</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>480</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>448</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>452</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>329</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>430</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>371</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>326</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>219</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>276</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>226</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>218</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>157</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>114</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>144</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>86</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>53</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>66</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>43</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>27</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "No-show    No  Yes\n",
       "Age               \n",
       "0        2900  639\n",
       "1        1858  415\n",
       "2        1366  252\n",
       "3        1236  277\n",
       "4        1017  282\n",
       "5        1169  320\n",
       "6        1205  316\n",
       "7        1126  301\n",
       "8        1106  318\n",
       "9        1008  364\n",
       "10        970  304\n",
       "11        948  247\n",
       "12        820  272\n",
       "13        800  303\n",
       "14        802  316\n",
       "15        889  322\n",
       "16       1049  353\n",
       "17       1113  396\n",
       "18       1137  350\n",
       "19       1151  394\n",
       "20       1082  355\n",
       "21       1097  355\n",
       "22       1025  351\n",
       "23       1006  343\n",
       "24        921  321\n",
       "25        980  352\n",
       "26        971  312\n",
       "27       1048  329\n",
       "28       1116  332\n",
       "29       1073  330\n",
       "..        ...  ...\n",
       "73        629   96\n",
       "74        513   89\n",
       "75        463   81\n",
       "76        480   91\n",
       "77        448   79\n",
       "78        452   89\n",
       "79        329   61\n",
       "80        430   81\n",
       "81        371   63\n",
       "82        326   66\n",
       "83        219   61\n",
       "84        276   35\n",
       "85        226   49\n",
       "86        218   42\n",
       "87        157   27\n",
       "88        114   12\n",
       "89        144   29\n",
       "90         86   23\n",
       "91         53   13\n",
       "92         66   20\n",
       "93         43   10\n",
       "94         27    6\n",
       "95         18    6\n",
       "96         16    1\n",
       "97          9    2\n",
       "98          5    1\n",
       "99          1    0\n",
       "100         4    0\n",
       "102         2    0\n",
       "115         2    3\n",
       "\n",
       "[103 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Relation of age with the likelihood of showing up\n",
    "#  \n",
    "age_no_show = pd.crosstab(df.Age, df['No-show'])\n",
    "age_no_show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9a183eb240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <th>No-show</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">0</th>\n",
       "      <th>No</th>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "      <td>2900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "      <td>639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>No</th>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "      <td>1858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "      <td>415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>No</th>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "      <td>1366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>No</th>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "      <td>1236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "      <td>277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">4</th>\n",
       "      <th>No</th>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "      <td>1017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "      <td>282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">5</th>\n",
       "      <th>No</th>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "      <td>1169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "      <td>320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">6</th>\n",
       "      <th>No</th>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "      <td>1205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">7</th>\n",
       "      <th>No</th>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "      <td>1126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "      <td>301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">8</th>\n",
       "      <th>No</th>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "      <td>1106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "      <td>318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">9</th>\n",
       "      <th>No</th>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "      <td>1008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">10</th>\n",
       "      <th>No</th>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "      <td>970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "      <td>304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">11</th>\n",
       "      <th>No</th>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "      <td>948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "      <td>247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">12</th>\n",
       "      <th>No</th>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "      <td>820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "      <td>272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">13</th>\n",
       "      <th>No</th>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "      <td>800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "      <td>303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">14</th>\n",
       "      <th>No</th>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "      <td>802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <th>Yes</th>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">87</th>\n",
       "      <th>No</th>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "      <td>157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">88</th>\n",
       "      <th>No</th>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">89</th>\n",
       "      <th>No</th>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">90</th>\n",
       "      <th>No</th>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">91</th>\n",
       "      <th>No</th>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">92</th>\n",
       "      <th>No</th>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">93</th>\n",
       "      <th>No</th>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">94</th>\n",
       "      <th>No</th>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">95</th>\n",
       "      <th>No</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">96</th>\n",
       "      <th>No</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">97</th>\n",
       "      <th>No</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">98</th>\n",
       "      <th>No</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <th>No</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <th>No</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <th>No</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">115</th>\n",
       "      <th>No</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>203 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             PatientId  AppointmentID  Gender  ScheduledDay  AppointmentDay  \\\n",
       "Age No-show                                                                   \n",
       "0   No            2900           2900    2900          2900            2900   \n",
       "    Yes            639            639     639           639             639   \n",
       "1   No            1858           1858    1858          1858            1858   \n",
       "    Yes            415            415     415           415             415   \n",
       "2   No            1366           1366    1366          1366            1366   \n",
       "    Yes            252            252     252           252             252   \n",
       "3   No            1236           1236    1236          1236            1236   \n",
       "    Yes            277            277     277           277             277   \n",
       "4   No            1017           1017    1017          1017            1017   \n",
       "    Yes            282            282     282           282             282   \n",
       "5   No            1169           1169    1169          1169            1169   \n",
       "    Yes            320            320     320           320             320   \n",
       "6   No            1205           1205    1205          1205            1205   \n",
       "    Yes            316            316     316           316             316   \n",
       "7   No            1126           1126    1126          1126            1126   \n",
       "    Yes            301            301     301           301             301   \n",
       "8   No            1106           1106    1106          1106            1106   \n",
       "    Yes            318            318     318           318             318   \n",
       "9   No            1008           1008    1008          1008            1008   \n",
       "    Yes            364            364     364           364             364   \n",
       "10  No             970            970     970           970             970   \n",
       "    Yes            304            304     304           304             304   \n",
       "11  No             948            948     948           948             948   \n",
       "    Yes            247            247     247           247             247   \n",
       "12  No             820            820     820           820             820   \n",
       "    Yes            272            272     272           272             272   \n",
       "13  No             800            800     800           800             800   \n",
       "    Yes            303            303     303           303             303   \n",
       "14  No             802            802     802           802             802   \n",
       "    Yes            316            316     316           316             316   \n",
       "...                ...            ...     ...           ...             ...   \n",
       "86  Yes             42             42      42            42              42   \n",
       "87  No             157            157     157           157             157   \n",
       "    Yes             27             27      27            27              27   \n",
       "88  No             114            114     114           114             114   \n",
       "    Yes             12             12      12            12              12   \n",
       "89  No             144            144     144           144             144   \n",
       "    Yes             29             29      29            29              29   \n",
       "90  No              86             86      86            86              86   \n",
       "    Yes             23             23      23            23              23   \n",
       "91  No              53             53      53            53              53   \n",
       "    Yes             13             13      13            13              13   \n",
       "92  No              66             66      66            66              66   \n",
       "    Yes             20             20      20            20              20   \n",
       "93  No              43             43      43            43              43   \n",
       "    Yes             10             10      10            10              10   \n",
       "94  No              27             27      27            27              27   \n",
       "    Yes              6              6       6             6               6   \n",
       "95  No              18             18      18            18              18   \n",
       "    Yes              6              6       6             6               6   \n",
       "96  No              16             16      16            16              16   \n",
       "    Yes              1              1       1             1               1   \n",
       "97  No               9              9       9             9               9   \n",
       "    Yes              2              2       2             2               2   \n",
       "98  No               5              5       5             5               5   \n",
       "    Yes              1              1       1             1               1   \n",
       "99  No               1              1       1             1               1   \n",
       "100 No               4              4       4             4               4   \n",
       "102 No               2              2       2             2               2   \n",
       "115 No               2              2       2             2               2   \n",
       "    Yes              3              3       3             3               3   \n",
       "\n",
       "             Neighbourhood  Scholarship  Hipertension  Diabetes  Alcoholism  \\\n",
       "Age No-show                                                                   \n",
       "0   No                2900         2900          2900      2900        2900   \n",
       "    Yes                639          639           639       639         639   \n",
       "1   No                1858         1858          1858      1858        1858   \n",
       "    Yes                415          415           415       415         415   \n",
       "2   No                1366         1366          1366      1366        1366   \n",
       "    Yes                252          252           252       252         252   \n",
       "3   No                1236         1236          1236      1236        1236   \n",
       "    Yes                277          277           277       277         277   \n",
       "4   No                1017         1017          1017      1017        1017   \n",
       "    Yes                282          282           282       282         282   \n",
       "5   No                1169         1169          1169      1169        1169   \n",
       "    Yes                320          320           320       320         320   \n",
       "6   No                1205         1205          1205      1205        1205   \n",
       "    Yes                316          316           316       316         316   \n",
       "7   No                1126         1126          1126      1126        1126   \n",
       "    Yes                301          301           301       301         301   \n",
       "8   No                1106         1106          1106      1106        1106   \n",
       "    Yes                318          318           318       318         318   \n",
       "9   No                1008         1008          1008      1008        1008   \n",
       "    Yes                364          364           364       364         364   \n",
       "10  No                 970          970           970       970         970   \n",
       "    Yes                304          304           304       304         304   \n",
       "11  No                 948          948           948       948         948   \n",
       "    Yes                247          247           247       247         247   \n",
       "12  No                 820          820           820       820         820   \n",
       "    Yes                272          272           272       272         272   \n",
       "13  No                 800          800           800       800         800   \n",
       "    Yes                303          303           303       303         303   \n",
       "14  No                 802          802           802       802         802   \n",
       "    Yes                316          316           316       316         316   \n",
       "...                    ...          ...           ...       ...         ...   \n",
       "86  Yes                 42           42            42        42          42   \n",
       "87  No                 157          157           157       157         157   \n",
       "    Yes                 27           27            27        27          27   \n",
       "88  No                 114          114           114       114         114   \n",
       "    Yes                 12           12            12        12          12   \n",
       "89  No                 144          144           144       144         144   \n",
       "    Yes                 29           29            29        29          29   \n",
       "90  No                  86           86            86        86          86   \n",
       "    Yes                 23           23            23        23          23   \n",
       "91  No                  53           53            53        53          53   \n",
       "    Yes                 13           13            13        13          13   \n",
       "92  No                  66           66            66        66          66   \n",
       "    Yes                 20           20            20        20          20   \n",
       "93  No                  43           43            43        43          43   \n",
       "    Yes                 10           10            10        10          10   \n",
       "94  No                  27           27            27        27          27   \n",
       "    Yes                  6            6             6         6           6   \n",
       "95  No                  18           18            18        18          18   \n",
       "    Yes                  6            6             6         6           6   \n",
       "96  No                  16           16            16        16          16   \n",
       "    Yes                  1            1             1         1           1   \n",
       "97  No                   9            9             9         9           9   \n",
       "    Yes                  2            2             2         2           2   \n",
       "98  No                   5            5             5         5           5   \n",
       "    Yes                  1            1             1         1           1   \n",
       "99  No                   1            1             1         1           1   \n",
       "100 No                   4            4             4         4           4   \n",
       "102 No                   2            2             2         2           2   \n",
       "115 No                   2            2             2         2           2   \n",
       "    Yes                  3            3             3         3           3   \n",
       "\n",
       "             Handcap  SMS_received  \n",
       "Age No-show                         \n",
       "0   No          2900          2900  \n",
       "    Yes          639           639  \n",
       "1   No          1858          1858  \n",
       "    Yes          415           415  \n",
       "2   No          1366          1366  \n",
       "    Yes          252           252  \n",
       "3   No          1236          1236  \n",
       "    Yes          277           277  \n",
       "4   No          1017          1017  \n",
       "    Yes          282           282  \n",
       "5   No          1169          1169  \n",
       "    Yes          320           320  \n",
       "6   No          1205          1205  \n",
       "    Yes          316           316  \n",
       "7   No          1126          1126  \n",
       "    Yes          301           301  \n",
       "8   No          1106          1106  \n",
       "    Yes          318           318  \n",
       "9   No          1008          1008  \n",
       "    Yes          364           364  \n",
       "10  No           970           970  \n",
       "    Yes          304           304  \n",
       "11  No           948           948  \n",
       "    Yes          247           247  \n",
       "12  No           820           820  \n",
       "    Yes          272           272  \n",
       "13  No           800           800  \n",
       "    Yes          303           303  \n",
       "14  No           802           802  \n",
       "    Yes          316           316  \n",
       "...              ...           ...  \n",
       "86  Yes           42            42  \n",
       "87  No           157           157  \n",
       "    Yes           27            27  \n",
       "88  No           114           114  \n",
       "    Yes           12            12  \n",
       "89  No           144           144  \n",
       "    Yes           29            29  \n",
       "90  No            86            86  \n",
       "    Yes           23            23  \n",
       "91  No            53            53  \n",
       "    Yes           13            13  \n",
       "92  No            66            66  \n",
       "    Yes           20            20  \n",
       "93  No            43            43  \n",
       "    Yes           10            10  \n",
       "94  No            27            27  \n",
       "    Yes            6             6  \n",
       "95  No            18            18  \n",
       "    Yes            6             6  \n",
       "96  No            16            16  \n",
       "    Yes            1             1  \n",
       "97  No             9             9  \n",
       "    Yes            2             2  \n",
       "98  No             5             5  \n",
       "    Yes            1             1  \n",
       "99  No             1             1  \n",
       "100 No             4             4  \n",
       "102 No             2             2  \n",
       "115 No             2             2  \n",
       "    Yes            3             3  \n",
       "\n",
       "[203 rows x 12 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "figure = plt.figure()\n",
    "grid = figure.add_subplot(1,1,1)\n",
    "age = df['Age']\n",
    "grid.hist(age, 100, color='blue',alpha=0.7)\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Shows Count')\n",
    "plt.title('age vs shows count')\n",
    "plt.show()\n",
    "df.groupby(['Age','No-show']).count()\n",
    "#There is a significant peak at age zero which can be inferred that new borns show up to the hospital the most.\n",
    "#there are also peaks at random ages like 7,17,23,30,38,51,62 (approximately) \n",
    "#the showups decrease significantly till age 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Gender</th>\n",
       "      <th>F</th>\n",
       "      <th>M</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>No-show</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>57245</td>\n",
       "      <td>30962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>14594</td>\n",
       "      <td>7725</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Gender       F      M\n",
       "No-show              \n",
       "No       57245  30962\n",
       "Yes      14594   7725"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show ups based on Gender\n",
    "pd.crosstab(df['No-show'],df['Gender'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Alcoholism</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>No-show</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>85524</td>\n",
       "      <td>2683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>21642</td>\n",
       "      <td>677</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Alcoholism      0     1\n",
       "No-show                \n",
       "No          85524  2683\n",
       "Yes         21642   677"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show ups based on Alcoholism\n",
    "pd.crosstab(df['No-show'],df['Alcoholism'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>SMS_received</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>No-show</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>No</th>\n",
       "      <td>62509</td>\n",
       "      <td>25698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yes</th>\n",
       "      <td>12535</td>\n",
       "      <td>9784</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "SMS_received      0      1\n",
       "No-show                   \n",
       "No            62509  25698\n",
       "Yes           12535   9784"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show ups based on SMS received\n",
    "pd.crosstab(df['No-show'],df['SMS_received'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 2  (Find Number of visits according to gender)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9a1820b6d8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Continue to explore the data to address your additional research\n",
    "#   questions. Add more headers as needed if you have more questions to\n",
    "#   investigate.\n",
    "# by gender , the no of visits\n",
    "dfNew = df[df['No-show'] == 'No']\n",
    "age_df = pd.DataFrame()\n",
    "age_df['Age'] = range(dfNew['Age'].max() + 2)\n",
    "men = age_df.Age.apply(lambda x: len(dfNew[(dfNew.Age == x) & (dfNew.Gender == 'M')]))\n",
    "women = age_df.Age.apply(lambda x: len(dfNew[(dfNew.Age == x) & (dfNew.Gender == 'F')]))\n",
    "plt.plot(range(dfNew['Age'].max() + 2),men, 'b')\n",
    "plt.plot(range(dfNew['Age'].max() + 2),women, color = 'r')\n",
    "plt.legend(['M','F'])\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Number of appointments')\n",
    "plt.title('age vs no of appointments')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#We can clearly observe that both genders visit the hospitals approximately the same number of times untill 10-12 years\n",
    "#of age after which females are more likely to visit than males\n",
    "#However,there is an interesting observation that the number of appointments become almost equal for both genders after \n",
    "#the age of 100 years approximately\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "While the various colums give us some idea about the dataset , we might never infer the real cause of the showups.\n",
    "The wrong entries of age (to be -1) can be considered as human fallibility. This draws me to the fact that how many other values might have been entered as incorrect.\n",
    "Finally, I would like to reflect that we might not be able to use this analysis elsewhere because it gives us information about specific area of a country which might not be applicable on other parts of the world. So we don't have an absolute call on it.\n",
    "\n",
    "\n",
    "## Submitting your Project \n",
    "\n",
    "> Before you submit your project, you need to create a .html or .pdf version of this notebook in the workspace here. To do that, run the code cell below. If it worked correctly, you should get a return code of 0, and you should see the generated .html file in the workspace directory (click on the orange Jupyter icon in the upper left).\n",
    "\n",
    "> Alternatively, you can download this report as .html via the **File** > **Download as** submenu, and then manually upload it into the workspace directory by clicking on the orange Jupyter icon in the upper left, then using the Upload button.\n",
    "\n",
    "> Once you've done this, you can submit your project by clicking on the \"Submit Project\" button in the lower right here. This will create and submit a zip file with this .ipynb doc and the .html or .pdf version you created. Congratulations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from subprocess import call\n",
    "call(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
